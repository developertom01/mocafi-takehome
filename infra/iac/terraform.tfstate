{
  "version": 4,
  "terraform_version": "1.10.3",
  "serial": 80,
  "lineage": "746af4c2-94a0-e6b0-dd07-85ab89716df0",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "linode_instance",
      "name": "mocafi-server",
      "provider": "provider[\"registry.terraform.io/linode/linode\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alerts": [
              {
                "cpu": 90,
                "io": 10000,
                "network_in": 10,
                "network_out": 10,
                "transfer_quota": 80
              }
            ],
            "authorized_keys": null,
            "authorized_users": null,
            "backup_id": null,
            "backups": [
              {
                "available": false,
                "enabled": false,
                "schedule": [
                  {
                    "day": "",
                    "window": ""
                  }
                ]
              }
            ],
            "backups_enabled": false,
            "boot_config_label": "My Ubuntu 20.04 LTS Profile",
            "booted": true,
            "capabilities": [],
            "config": [
              {
                "comments": "",
                "devices": [
                  {
                    "sda": [
                      {
                        "disk_id": 135431218,
                        "disk_label": "Ubuntu 20.04 LTS Disk",
                        "volume_id": 0
                      }
                    ],
                    "sdb": [
                      {
                        "disk_id": 135431219,
                        "disk_label": "512 MB Swap Image",
                        "volume_id": 0
                      }
                    ],
                    "sdc": [],
                    "sdd": [],
                    "sde": [],
                    "sdf": [],
                    "sdg": [],
                    "sdh": []
                  }
                ],
                "helpers": [
                  {
                    "devtmpfs_automount": true,
                    "distro": true,
                    "modules_dep": true,
                    "network": true,
                    "updatedb_disabled": true
                  }
                ],
                "id": 72838983,
                "interface": [],
                "kernel": "linode/grub2",
                "label": "My Ubuntu 20.04 LTS Profile",
                "memory_limit": 0,
                "root_device": "/dev/sda",
                "run_level": "default",
                "virt_mode": "paravirt"
              }
            ],
            "disk": [
              {
                "authorized_keys": [],
                "authorized_users": [],
                "filesystem": "ext4",
                "id": 135431218,
                "image": "",
                "label": "Ubuntu 20.04 LTS Disk",
                "read_only": false,
                "root_pass": "",
                "size": 25088,
                "stackscript_data": {},
                "stackscript_id": 0
              },
              {
                "authorized_keys": [],
                "authorized_users": [],
                "filesystem": "swap",
                "id": 135431219,
                "image": "",
                "label": "512 MB Swap Image",
                "read_only": false,
                "root_pass": "",
                "size": 512,
                "stackscript_data": {},
                "stackscript_id": 0
              }
            ],
            "disk_encryption": "disabled",
            "firewall_id": null,
            "group": "",
            "has_user_data": false,
            "host_uuid": "779db26dc9977909eda91c0338af210df274f3cf",
            "id": "69476288",
            "image": "linode/ubuntu20.04",
            "interface": [],
            "ip_address": "50.116.52.199",
            "ipv4": [
              "50.116.52.199"
            ],
            "ipv6": "2600:3c03::f03c:95ff:fea1:6f59/128",
            "label": "mocafi-server",
            "lke_cluster_id": 0,
            "metadata": [],
            "migration_type": "cold",
            "placement_group": [],
            "placement_group_externally_managed": null,
            "private_ip": false,
            "private_ip_address": null,
            "region": "us-east",
            "resize_disk": false,
            "root_pass": "muKqP7ApMgxLmJmpglfD8ikWBr/itDs7cndboyzrFmhLKDDVP85XKmfpVxZD1G51DUqkXB0JfWFildgZ69gtqg==",
            "shared_ipv4": [],
            "specs": [
              {
                "disk": 25600,
                "memory": 1024,
                "transfer": 1000,
                "vcpus": 1
              }
            ],
            "stackscript_data": null,
            "stackscript_id": 1588747,
            "status": "running",
            "swap_size": 512,
            "tags": [],
            "timeouts": null,
            "type": "g6-nanode-1",
            "watchdog_enabled": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "root_pass"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "stackscript_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "disk"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "root_pass"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "disk"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "stackscript_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "disk"
              },
              {
                "type": "index",
                "value": {
                  "value": 1,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "stackscript_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "disk"
              },
              {
                "type": "index",
                "value": {
                  "value": 1,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "root_pass"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "linode_stackscript.start-server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "linode_stackscript",
      "name": "start-server",
      "provider": "provider[\"registry.terraform.io/linode/linode\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "created": "2025-01-03T13:59:28Z",
            "deployments_active": 0,
            "deployments_total": 0,
            "description": "Starts the Mocafi server",
            "id": "1588747",
            "images": [
              "linode/ubuntu20.04"
            ],
            "is_public": false,
            "label": "Start Mocafi Server",
            "rev_note": "",
            "script": "#!/bin/bash\n\n# Exit script if any command fails\nset -e -o pipefail\n\n# Update package list and upgrade system\necho \"Updating package list and upgrading system...\"\nsudo apt update -y\nsudo apt upgrade -y\n\n# Install required dependencies\necho \"Installing required dependencies...\"\nsudo apt install -y apt-transport-https ca-certificates curl software-properties-common git ufw\n\n# Install Docker\necho \"Installing Docker...\"\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\necho \"Adding Docker repository...\"\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n\nsudo apt update -y\nsudo apt install -y docker-ce docker-ce-cli containerd.io\necho \"Docker installed successfully!\"\n\n# Enable and start Docker service\necho \"Enabling and starting Docker service...\"\nsystemctl enable docker\nsystemctl start docker\n\n# Add user to Docker group\necho \"Adding user to Docker group...\"\nsudo usermod -aG docker $USER\n\n# Allow ports 80 and 443 through the firewall\necho \"Configuring firewall rules...\"\nsudo ufw allow 80\nsudo ufw allow 443\nsudo ufw --force enable\n\n# Clone app repository\necho \"Cloning app repository...\"\ngit clone https://github.com/developertom01/mocafi-takehome\ncd mocafi-takehome\n\n# Setup environment variables\necho \"Setting up environment variables...\"\ncat \u003c\u003cEOF \u003e\u003e ~/.bashrc\nexport DB_CONNECTION_STRING=\"$var.db_connection_string\"\nexport DATABASE_NAME=\"$var.database_name\"\nexport APP_SECRET=\"$var.app_secrete\"\nexport APP_PORT=\"$var.app_port\"\nexport DATABASE_SECRET=\"$var.database_secret\"\nexport MONGO_DB_KEY_VAULT_NAMESPACE=\"$var.mongo_vault_namespace\"\nEOF\n\n# Apply environment variables\nsource ~/.bashrc\n\n# Start up the app\necho \"Starting up the app...\"\ndocker compose up -d\n\necho \"Setup complete!\"\n",
            "updated": "2025-01-03T13:59:28Z",
            "user_defined_fields": [],
            "user_gravatar_id": "3641683373d03504d34931a730cb543c",
            "username": "tommylee001"
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
